name: Gemini CLI Integration and AGI Enhancement

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'gemini_cli_integration.py'
      - 'advanced_integrations/gemini_cli/**'
      - '.github/workflows/gemini-cli-integration.yml'
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 8 * * *'  # Daily at 8 AM UTC
  workflow_dispatch:    # Manual trigger

jobs:
  gemini-cli-setup:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Setup Node.js for Gemini CLI
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml requests pathlib-utils
        
    - name: Install Gemini CLI
      run: |
        npm install -g @google/generative-ai
        npm install -g @modelcontextprotocol/cli
        
    - name: Validate Gemini CLI Integration
      run: |
        python3 gemini_cli_integration.py --configure
        echo "✅ Gemini CLI configuration validated"
        
    - name: Test AGI Enhancement Capabilities
      run: |
        python3 gemini_cli_integration.py --analyze
        echo "✅ AGI analysis capabilities tested"
        
  admin-compliance-integration:
    runs-on: ubuntu-latest
    needs: gemini-cli-setup
    timeout-minutes: 20
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Run Admin Compliance Integration
      run: |
        python3 gemini_cli_integration.py
        
        # Check if integration files exist and process them
        if [ -f "advanced_integrations/gemini_cli/admin_compliance_integration.sh" ]; then
          bash advanced_integrations/gemini_cli/admin_compliance_integration.sh
          echo "✅ Admin compliance integration completed"
        fi
        
    - name: Validate System Contents Processing
      run: |
        if [ -f "advanced_integrations/gemini_cli/contents_processor.py" ]; then
          python3 advanced_integrations/gemini_cli/contents_processor.py
          echo "✅ System contents processing validated"
        fi
        
    - name: Upload Integration Results
      uses: actions/upload-artifact@v4
      with:
        name: gemini-cli-integration-results
        path: |
          advanced_integrations/gemini_cli/
          !advanced_integrations/gemini_cli/**/*.pyc
        retention-days: 7
        
  agi-enhancement-demo:
    runs-on: ubuntu-latest
    needs: [gemini-cli-setup, admin-compliance-integration]
    timeout-minutes: 15
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Run Complete Integration Demo
      run: |
        python3 gemini_cli_integration.py
        
        # Run integration demo if available
        if [ -f "advanced_integrations/gemini_cli/integration_demo.sh" ]; then
          bash advanced_integrations/gemini_cli/integration_demo.sh
          echo "✅ Complete integration demo executed"
        fi
        
    - name: Generate Integration Report
      run: |
        python3 -c "
        import json
        import os
        from pathlib import Path
        
        report = {
          'integration_status': 'successful',
          'components_integrated': [
            'gemini_cli_configuration',
            'agi_enhanced_workflows', 
            'admin_compliance_tools',
            'system_contents_processing',
            'quantum_agi_enhancements'
          ],
          'files_processed': [],
          'workflow_run_id': '${{ github.run_id }}',
          'timestamp': '${{ github.event.head_commit.timestamp }}'
        }
        
        # Check for processed files
        integration_path = Path('advanced_integrations/gemini_cli')
        if integration_path.exists():
          for file_path in integration_path.rglob('*'):
            if file_path.is_file():
              report['files_processed'].append(str(file_path))
        
        with open('gemini_cli_integration_report.json', 'w') as f:
          json.dump(report, f, indent=2)
          
        print('📊 Integration report generated')
        "
        
    - name: Upload Final Integration Report
      uses: actions/upload-artifact@v4
      with:
        name: gemini-cli-final-report
        path: gemini_cli_integration_report.json
        retention-days: 30
        
    - name: Comment Integration Status
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let report = {};
          try {
            report = JSON.parse(fs.readFileSync('gemini_cli_integration_report.json', 'utf8'));
          } catch (e) {
            report = { integration_status: 'unknown', components_integrated: [] };
          }
          
          const comment = `## 🤖 Gemini CLI Integration Results
          
          **Status:** ${report.integration_status === 'successful' ? '✅ Successful' : '❌ Failed'}
          
          **Components Integrated:**
          ${report.components_integrated.map(comp => `- ✅ ${comp}`).join('\n')}
          
          **Files Processed:** ${report.files_processed ? report.files_processed.length : 0}
          
          The VARIABOT system now has enhanced AGI capabilities through Gemini CLI integration.
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });